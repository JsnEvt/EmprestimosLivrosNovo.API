// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using EmprestimosLivrosNovo.Domain.Entities;
using Microsoft.EntityFrameworkCore;

namespace EmprestimosLivrosNovo.Infra.Data;

public partial class ControleEmprestimoLivroContext : DbContext
{
    public ControleEmprestimoLivroContext(DbContextOptions<ControleEmprestimoLivroContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Cliente> Cliente { get; set; }

    public virtual DbSet<Emprestimo> Emprestimo { get; set; }

    public virtual DbSet<Livro> Livro { get; set; }

    public virtual DbSet<Usuario> Usuario { get; set; }

    public virtual DbSet<VW_EmprestimoNovo> VW_EmprestimoNovo { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Cliente>(entity =>
        {
            entity.Property(e => e.CPF)
                .IsRequired()
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.bairro)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.cidade)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.endereco)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.nome)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.numero)
                .IsRequired()
                .HasMaxLength(3);
            entity.Property(e => e.telefoneCelular).HasMaxLength(14);
            entity.Property(e => e.telefoneFixo).HasMaxLength(14);
        });

        modelBuilder.Entity<Emprestimo>(entity =>
        {
            entity.Property(e => e.dataEmprestimo).HasColumnType("datetime");
            entity.Property(e => e.dataEntrega).HasColumnType("datetime");

            entity.HasOne(d => d.Cliente).WithMany(p => p.Emprestimo)
                .HasForeignKey(d => d.ClienteId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Emprestimo_Cliente");

            entity.HasOne(d => d.Livro).WithMany(p => p.Emprestimo)
                .HasForeignKey(d => d.LivroId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Emprestimo_Livro");
        });

        modelBuilder.Entity<Livro>(entity =>
        {
            entity.Property(e => e.anoPublicacao).HasColumnType("datetime");
            entity.Property(e => e.autor)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.edicao)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.editora)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.nome)
                .IsRequired()
                .HasMaxLength(50)
                .IsFixedLength();
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(250);
        });

        modelBuilder.Entity<VW_EmprestimoNovo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("VW_EmprestimoNovo");

            entity.Property(e => e.CPF)
                .IsRequired()
                .HasMaxLength(14)
                .IsUnicode(false);
            entity.Property(e => e.dataEmprestimo).HasColumnType("datetime");
            entity.Property(e => e.dataEntrega).HasColumnType("datetime");
            entity.Property(e => e.nomeCliente)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.nomeLivro)
                .IsRequired()
                .HasMaxLength(50)
                .IsFixedLength();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}